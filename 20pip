// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© shoonya0000

//@version=5
indicator(title='20PIP', shorttitle='20P ', overlay=true)

// ### Four Smoothed Moving Averages

len1 = 21
//input(21, minval=1, title="Length 1", group = "Smoothed MA Inputs")
src1 = close
//input(close, title="Source 1", group = "Smoothed MA Inputs")
smma1 = 0.0
sma_1 = ta.sma(src1, len1)
smma1 := na(smma1[1]) ? sma_1 : (smma1[1] * (len1 - 1) + src1) / len1
plot(smma1, color=color.new(color.blue, 0), linewidth=2, title='21 SMMA')

len2 = 50
//input(50, minval=1, title="Length 2", group = "Smoothed MA Inputs")
src2 = close
//input(close, title="Source 2", group = "Smoothed MA Inputs")
smma2 = 0.0
sma_2 = ta.sma(src2, len2)
smma2 := na(smma2[1]) ? sma_2 : (smma2[1] * (len2 - 1) + src2) / len2
plot(smma2, color=color.new(color.green, 0), linewidth=2, title='50 SMMA')
//color=color.new(#6aff00,0)
h100 = input.bool(title='Show 100 Line', defval=true, group='Smoothed MA Inputs')
len3 = 100
//input(100, minval=1, title="Length 3", group = "Smoothed MA Inputs")
src3 = close
//input(close, title="Source 3", group = "Smoothed MA Inputs")
smma3 = 0.0
sma_3 = ta.sma(src3, len3)
smma3 := na(smma3[1]) ? sma_3 : (smma3[1] * (len3 - 1) + src3) / len3
sma3plot = plot(h100 ? smma3 : na, color=color.new(color.purple, 0), linewidth=2, title='100 SMMA')

len4 = 200
//input(200, minval=1, title="Length 4", group = "Smoothed MA Inputs")
src4 = close
//input(close, title="Source 4", group = "Smoothed MA Inputs")
smma4 = 0.0
sma_4 = ta.sma(src4, len4)
smma4 := na(smma4[1]) ? sma_4 : (smma4[1] * (len4 - 1) + src4) / len4
sma4plot = plot(smma4, color=color.new(color.red, 0), linewidth=2, title='200 SMMA')
//color=color.new(#ff0500,0)
// Trend Fill

//trendFill = input(title="Show Trend Fill", type=input.bool, defval=true, group = "Smoothed MA Inputs") 
//ema2 = ema(close, 2)
//ema2plot = plot(ema2, color=#2ecc71, transp=100, style=plot.style_line, linewidth=1, title="EMA(2)", editable = false)

//fill(ema2plot, sma4plot, color=ema2 > smma4 and trendFill ? color.green : ema2 < smma4 and trendFill ? color.red : na, transp=85, title = "Trend Fill")

// End ###

// ### 3 Line Strike

bearS = input.bool(title='Show Bearish 3 Line Strike', defval=true, group='3 Line Strike')
bullS = input.bool(title='Show Bullish 3 Line Strike', defval=true, group='3 Line Strike')

bearSig = close[3] > open[3] and close[2] > open[2] and close[1] > open[1] and close < open[1]
bullSig = close[3] < open[3] and close[2] < open[2] and close[1] < open[1] and close > open[1]

plotshape(bullS ? bullSig : na, style=shape.triangleup, color=color.new(color.green, 0), location=location.belowbar, size=size.small, text='Bull', title='3 Line Strike Up')
plotshape(bearS ? bearSig : na, style=shape.triangledown, color=color.new(color.red, 0), location=location.abovebar, size=size.small, text='Bear', title='3 Line Strike Down')

// End ###

//### Engulfing Candles

bearE = input.bool(title='Show Bearish Big A$$ Candles', defval=true, group='Big A$$ Candles')
bullE = input.bool(title='Show Bullish Big A$$ Candles', defval=true, group='Big A$$ Candles')

openBarPrevious = open[1]
closeBarPrevious = close[1]
openBarCurrent = open
closeBarCurrent = close

//If current bar open is less than equal to the previous bar close AND current bar open is less than previous bar open AND current bar close is greater than previous bar open THEN True
bullishEngulfing = openBarCurrent <= closeBarPrevious and openBarCurrent < openBarPrevious and closeBarCurrent > openBarPrevious
//If current bar open is greater than equal to previous bar close AND current bar open is greater than previous bar open AND current bar close is less than previous bar open THEN True
bearishEngulfing = openBarCurrent >= closeBarPrevious and openBarCurrent > openBarPrevious and closeBarCurrent < openBarPrevious

//bullishEngulfing/bearishEngulfing return a value of 1 or 0; if 1 then plot on chart, if 0 then don't plot
plotshape(bullE ? bullishEngulfing : na, style=shape.triangleup, location=location.belowbar, color=color.new(color.green, 0), size=size.tiny, title='Big Candle Up')
plotshape(bearE ? bearishEngulfing : na, style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), size=size.tiny, title='Big Candle Down')

alertcondition(bullishEngulfing, title='Bullish Engulfing', message='[CurrencyPair] [TimeFrame], Bullish candle engulfing previous candle')
alertcondition(bearishEngulfing, title='Bearish Engulfing', message='[CurrencyPair] [TimeFrame], Bearish candle engulfing previous candle')

// End ###

// ### Logo


var table logo = table.new(position.bottom_left, 1, 1, bgcolor=color.red, frame_width=2, frame_color=color.black)

if barstate.islast
    table.cell(logo, 0, 0, 'Shoonya', text_color=color.black)
// End ###


//Periods = input(title="ATR Period", type=input.integer, defval=8)
//src = input(hl2, title="Source")
//Multiplier = input(title="ATR Multiplier", type=input.float, step=0.1, defval=3.0)
//changeATR= input(title="Change ATR Calculation Method ?", type=input.bool, defval=true)
//showsignals = input(title="Show Buy/Sell Signals ?", type=input.bool, defval=true)
//highlighting = input(title="Highlighter On/Off ?", type=input.bool, defval=true)
//atr2 = sma(tr, Periods)
//atr= changeATR ? atr(Periods) : atr2
//up=src-(Multiplier*atr)
//up1 = nz(up[1],up)
//up := close[1] > up1 ? max(up,up1) : up
//dn=src+(Multiplier*atr)
//dn1 = nz(dn[1], dn)
//dn := close[1] < dn1 ? min(dn, dn1) : dn
//trend = 1
//trend := nz(trend[1], trend)
//trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend
//upPlot = plot(trend == 1 ? up : na, title="Up Trend", style=plot.style_linebr, linewidth=2, color=color.green)
//buySignal = trend == 1 and trend[1] == -1
//plotshape(buySignal ? up : na, title="UpTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color = color.rgb(0, 255, 0, transp = 50))
//plotshape(buySignal and showsignals ? up : na, title="B", text="B", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.rgb(0, 255, 0, transp = 50), textcolor=color.white)
//dnPlot = plot(trend == 1 ? na : dn, title="Down Trend", style=plot.style_linebr, linewidth=2, color=color.red)
//sellSignal = trend == -1 and trend[1] == 1
//plotshape(sellSignal ? dn : na, title="DownTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color = color.rgb(255, 82, 82, transp = 50))
//plotshape(sellSignal and showsignals ? dn : na, title="S", text="S", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.rgb(255, 82, 82, transp = 50), textcolor=color.white)
//mPlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0)
//longFillColor = highlighting ? (trend == 1 ? color.green : color.white) : color.white
//shortFillColor = highlighting ? (trend == -1 ? color.red : color.white) : color.white
//fill(mPlot, upPlot, title="UpTrend Highligter", color=longFillColor)
//fill(mPlot, dnPlot, title="DownTrend Highligter", color=shortFillColor)
//alertcondition(buySignal, title="SuperTrend Buy", message="SuperTrend Buy!")
//alertcondition(sellSignal, title="SuperTrend Sell", message="SuperTrend Sell!")
//changeCond = trend != trend[1]
//alertcondition(changeCond, title="SuperTrend Direction Change", message="SuperTrend has changed direction!")


